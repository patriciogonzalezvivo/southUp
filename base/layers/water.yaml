import:
    - ../../blocks/filter/grid.yaml
    - ../../blocks/elevation/normal.yaml
    - ../../blocks/generative/noise.yaml

layers:
    water:
        data: { source: mapzen }
        draw:
            polygons:
                style: water
                order: global.order
                color: [0.906,0.945,0.961]
        water-early:
            filter: { $zoom: { max: 6 } }
            draw:
                polygons:
                    style: water-early
        water-later:
            filter: { $zoom: { min: 16 } }
            draw:
                polygons:
                    style: water-later

styles:
    water-early:
        mix: [polygons-southup, elevation-normal, filter-grid, functions-zoom]
        shaders:
            defines:
                ZOOM_START: 0
                ZOOM_END: 6
                GRID_AMOUNT: 0.1
                WATER_EARLY: vec3(0.196,0.255,0.408)
                # WATER_EARLY: vec3(0.246,0.275,0.305)
            blocks:
                color: |
                    color.rgb = mix(WATER_EARLY,color.rgb,zoom());

    water:
        mix: [polygons-southup, elevation-normal, filter-grid, functions-zoom]
        shaders:
            defines:
                ZOOM_START: 10
                ZOOM_END: 12
                GRID_AMOUNT: 0.1
                WATER_NORMALS_START: normal
                WATER_NORMALS_END: vec3(0.,0.,1.)
            blocks:
                normal: | 
                    normal = mix(WATER_NORMALS_START, WATER_NORMALS_END, zoom()); 
    water-later:
        mix: [water, generative-noise]
        animated: true
        shaders:
            defines:
                ZOOM_START: 16
                ZOOM_END: 20
                GRID_AMOUNT: 0.25
                WATER_NORMALS_START: vec3(0.,0.,1.)
                WATER_NORMALS_END: (vec3(0.,0.,1.)+snoise(vec3(worldPosition().xy*0.08,u_time*.5))*.2)